<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>